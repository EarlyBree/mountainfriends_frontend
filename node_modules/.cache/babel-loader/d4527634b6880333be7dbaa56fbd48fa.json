{"ast":null,"code":"var _jsxFileName = \"C:\\\\mountain_friends\\\\frontend\\\\src\\\\components\\\\Home\\\\MyMountains.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport HikeDetails from \"./HikeDetails\";\nimport classes from \"./MyMountains.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyMountains = () => {\n  _s();\n\n  const [myHikes, setMyHikes] = useState([]);\n  useEffect(() => {\n    const fetchMyMountains = async () => {\n      const reqOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: localStorage.getItem(\"isLoggedIn\")\n        })\n      };\n\n      try {\n        const response = await fetch(\"http://localhost:8080/getallhikes\", reqOptions);\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        } // let body = JSON.parse(JSON.stringify(response));\n\n\n        const body = await response.json(); // console.log(body);\n\n        setMyHikes(body);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchMyMountains();\n  }, []);\n  const allMyHikesCard = myHikes.map(hike => /*#__PURE__*/_jsxDEV(HikeDetails, {\n    id: hike.id,\n    date: hike.date,\n    name: hike.mountain.name,\n    difference: hike.mountain.difference,\n    altitude: hike.mountain.altitude\n  }, hike.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.mountainsinfo,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My mountains\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: allMyHikesCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyMountains, \"BIliizySB2i8LasDJXf3nEB344I=\");\n\n_c = MyMountains;\nexport default MyMountains;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyMountains\");","map":{"version":3,"names":["React","useState","useEffect","Card","HikeDetails","classes","MyMountains","myHikes","setMyHikes","fetchMyMountains","reqOptions","method","headers","body","JSON","stringify","id","localStorage","getItem","response","fetch","ok","Error","json","error","console","log","message","allMyHikesCard","map","hike","date","mountain","name","difference","altitude","mountainsinfo"],"sources":["C:/mountain_friends/frontend/src/components/Home/MyMountains.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport Card from \"../UI/Card/Card\";\r\nimport HikeDetails from \"./HikeDetails\";\r\nimport classes from \"./MyMountains.module.css\";\r\n\r\nconst MyMountains = () => {\r\n  const [myHikes, setMyHikes] = useState([]);\r\n  useEffect(() => {\r\n    const fetchMyMountains = async () => {\r\n      const reqOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          id: localStorage.getItem(\"isLoggedIn\"),\r\n        }),\r\n      };\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:8080/getallhikes\",\r\n          reqOptions\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n        // let body = JSON.parse(JSON.stringify(response));\r\n        const body = await response.json();\r\n        // console.log(body);\r\n        setMyHikes(body);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    fetchMyMountains();\r\n  }, []);\r\n\r\n  const allMyHikesCard = myHikes.map((hike) => (\r\n    <HikeDetails\r\n      key={hike.id}\r\n      id={hike.id}\r\n      date={hike.date}\r\n      name={hike.mountain.name}\r\n      difference={hike.mountain.difference}\r\n      altitude={hike.mountain.altitude}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Card className={classes.mountainsinfo}>\r\n      <h1>My mountains</h1>\r\n      <ul>{allMyHikesCard}</ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MyMountains;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACxB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMO,gBAAgB,GAAG,YAAY;MACnC,MAAMC,UAAU,GAAG;QACjBC,MAAM,EAAE,MADS;QAEjBC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAFQ;QAGjBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACnBC,EAAE,EAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB;QADe,CAAf;MAHW,CAAnB;;MAOA,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mCAD0B,EAE1BV,UAF0B,CAA5B;;QAIA,IAAI,CAACS,QAAQ,CAACE,EAAd,EAAkB;UAChB,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;QACD,CAPC,CAQF;;;QACA,MAAMT,IAAI,GAAG,MAAMM,QAAQ,CAACI,IAAT,EAAnB,CATE,CAUF;;QACAf,UAAU,CAACK,IAAD,CAAV;MACD,CAZD,CAYE,OAAOW,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;MACD;IACF,CAvBD;;IAwBAlB,gBAAgB;EACjB,CA1BQ,EA0BN,EA1BM,CAAT;EA4BA,MAAMmB,cAAc,GAAGrB,OAAO,CAACsB,GAAR,CAAaC,IAAD,iBACjC,QAAC,WAAD;IAEE,EAAE,EAAEA,IAAI,CAACd,EAFX;IAGE,IAAI,EAAEc,IAAI,CAACC,IAHb;IAIE,IAAI,EAAED,IAAI,CAACE,QAAL,CAAcC,IAJtB;IAKE,UAAU,EAAEH,IAAI,CAACE,QAAL,CAAcE,UAL5B;IAME,QAAQ,EAAEJ,IAAI,CAACE,QAAL,CAAcG;EAN1B,GACOL,IAAI,CAACd,EADZ;IAAA;IAAA;IAAA;EAAA,QADqB,CAAvB;EAWA,oBACE,QAAC,IAAD;IAAM,SAAS,EAAEX,OAAO,CAAC+B,aAAzB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKR;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA/CD;;GAAMtB,W;;KAAAA,W;AAiDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}