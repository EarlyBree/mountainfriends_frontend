{"ast":null,"code":"var _jsxFileName = \"C:\\\\mountain_friends\\\\frontend\\\\src\\\\components\\\\Home\\\\MyFriendsInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport FriendCard from \"./FriendCard\";\nimport classes from \"./MyFriendsInfo.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyFriendsInfo = () => {\n  _s();\n\n  const [allMyFriends, setAllMyFriends] = useState([]);\n\n  const fetchAllFriendsId = async () => {\n    const reqOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: localStorage.getItem(\"isLoggedIn\")\n      })\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:8080/getallmyfriendsid\", reqOptions);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const body = await response.json(); // console.log(body);\n\n      setAllMyFriends(body);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  fetchAllFriendsId();\n  const allFriendsCard = allMyFriends.map(friend => /*#__PURE__*/_jsxDEV(FriendCard, {\n    name: friend.name,\n    email: friend.email,\n    birthday: friend.birthday,\n    city: friend.city\n  }, friend.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.friendsinfo,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My friends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.friendlist,\n      children: allFriendsCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyFriendsInfo, \"7YCgckm/CpCXcubW49ziyW2qAAY=\");\n\n_c = MyFriendsInfo;\nexport default MyFriendsInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyFriendsInfo\");","map":{"version":3,"names":["React","useState","Card","FriendCard","classes","MyFriendsInfo","allMyFriends","setAllMyFriends","fetchAllFriendsId","reqOptions","method","headers","body","JSON","stringify","id","localStorage","getItem","response","fetch","ok","Error","json","error","console","log","message","allFriendsCard","map","friend","name","email","birthday","city","friendsinfo","friendlist"],"sources":["C:/mountain_friends/frontend/src/components/Home/MyFriendsInfo.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card/Card\";\r\nimport FriendCard from \"./FriendCard\";\r\nimport classes from \"./MyFriendsInfo.module.css\";\r\n\r\nconst MyFriendsInfo = () => {\r\n  const [allMyFriends, setAllMyFriends] = useState([]);\r\n\r\n  const fetchAllFriendsId = async () => {\r\n    const reqOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: localStorage.getItem(\"isLoggedIn\"),\r\n      }),\r\n    };\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:8080/getallmyfriendsid\",\r\n        reqOptions\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n      const body = await response.json();\r\n      // console.log(body);\r\n      setAllMyFriends(body);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  fetchAllFriendsId();\r\n\r\n  const allFriendsCard = allMyFriends.map((friend) => (\r\n    <FriendCard\r\n      key={friend.id}\r\n      name={friend.name}\r\n      email={friend.email}\r\n      birthday={friend.birthday}\r\n      city={friend.city}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Card className={classes.friendsinfo}>\r\n      <h1>My friends</h1>\r\n      <ul className={classes.friendlist}>{allFriendsCard}</ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MyFriendsInfo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,4BAApB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;EAAA;;EAC1B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;;EAEA,MAAMO,iBAAiB,GAAG,YAAY;IACpC,MAAMC,UAAU,GAAG;MACjBC,MAAM,EAAE,MADS;MAEjBC,OAAO,EAAE;QAAE,gBAAgB;MAAlB,CAFQ;MAGjBC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,EAAE,EAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB;MADe,CAAf;IAHW,CAAnB;;IAOA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,yCAD0B,EAE1BV,UAF0B,CAA5B;;MAIA,IAAI,CAACS,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACD;;MACD,MAAMT,IAAI,GAAG,MAAMM,QAAQ,CAACI,IAAT,EAAnB,CARE,CASF;;MACAf,eAAe,CAACK,IAAD,CAAf;IACD,CAXD,CAWE,OAAOW,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;IACD;EACF,CAtBD;;EAuBAlB,iBAAiB;EAEjB,MAAMmB,cAAc,GAAGrB,YAAY,CAACsB,GAAb,CAAkBC,MAAD,iBACtC,QAAC,UAAD;IAEE,IAAI,EAAEA,MAAM,CAACC,IAFf;IAGE,KAAK,EAAED,MAAM,CAACE,KAHhB;IAIE,QAAQ,EAAEF,MAAM,CAACG,QAJnB;IAKE,IAAI,EAAEH,MAAM,CAACI;EALf,GACOJ,MAAM,CAACd,EADd;IAAA;IAAA;IAAA;EAAA,QADqB,CAAvB;EAUA,oBACE,QAAC,IAAD;IAAM,SAAS,EAAEX,OAAO,CAAC8B,WAAzB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAI,SAAS,EAAE9B,OAAO,CAAC+B,UAAvB;MAAA,UAAoCR;IAApC;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA5CD;;GAAMtB,a;;KAAAA,a;AA8CN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}