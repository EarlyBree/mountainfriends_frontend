{"ast":null,"code":"var _jsxFileName = \"C:\\\\mountain_friends\\\\frontend\\\\src\\\\components\\\\Home\\\\MountainDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport Button from \"../UI/Button/Button\";\nimport Modal from \"../UI/Modal/Modal\";\nimport classes from \"./MountainDetails.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MountainDetails = props => {\n  _s();\n\n  const [addHike, setAddHike] = useState(false);\n  const [changedDate, setChangedDate] = useState(false);\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [allPeopleOnTheMountain, setAllPeopleOnTheMountain] = useState([]);\n\n  const goBack = () => {\n    props.onBack();\n  };\n\n  const addHikeHandler = () => {\n    setAddHike(true);\n  };\n\n  const noAdding = () => {\n    setEnteredDate(\"\");\n    setChangedDate(false);\n    setAddHike(false);\n  };\n\n  const changeDateHandler = event => {\n    setChangedDate(true);\n    setEnteredDate(event.target.value);\n  };\n\n  const writeHikeHandler = async () => {\n    const date = enteredDate.toString(); // console.log(date);\n\n    const reqOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: localStorage.getItem(\"isLoggedIn\"),\n        mountain: props.id,\n        date: date\n      })\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:8080/addhike\", reqOptions);\n\n      if (!response.ok) {\n        console.log(response);\n        throw new Error(\"Something went wrong\");\n      }\n\n      setAddHike(false);\n      setChangedDate(false);\n      setEnteredDate(\"\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    const getAllHikers = async () => {\n      const reqOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: localStorage.getItem(\"isLoggedIn\"),\n          mountain: props.id\n        })\n      };\n\n      try {\n        const response = await fetch(\"http://localhost:8080/getallhikers\", reqOptions);\n\n        if (!response.ok) {\n          console.log(response);\n          throw new Error(\"Something went wrong\");\n        }\n\n        const body = await response.json();\n        console.log(body);\n        setAllPeopleOnTheMountain(body);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    getAllHikers();\n  }, [props.id]);\n  const peopleOnTheMountainLi = allPeopleOnTheMountain.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: item\n  }, item, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.details,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Mountain details for \", props.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Altitude: \", props.altitude, \" m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Height difference: \", props.difference, \" m\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Longitude: \", props.longitude, \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Duration: \", props.duration, \" hours\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), allPeopleOnTheMountain.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.peoplediv,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"All people who have been on this mountain\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: peopleOnTheMountainLi\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.detailsbutton1,\n        onClick: goBack,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.detailsbutton2,\n        onClick: addHikeHandler,\n        children: \"Add tour to my list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), addHike && /*#__PURE__*/_jsxDEV(Modal, {\n      className: classes.mymodal,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.myh1,\n        children: [\"Do want to add \", props.name, \" to your hike list?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.myp,\n        children: \"Choose a date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.myinput,\n        type: \"date\",\n        id: \"newDate\",\n        name: \"newDate\",\n        min: \"2020-01-01\",\n        value: enteredDate,\n        onChange: changeDateHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.buttondiv,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: noAdding,\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), changedDate && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: writeHikeHandler,\n          children: \"Add hike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this), !changedDate && /*#__PURE__*/_jsxDEV(Button, {\n          disabled: true,\n          children: \"Add hike\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MountainDetails, \"lSibPBSxaChwR+BErUAi20pS6Xc=\");\n\n_c = MountainDetails;\nexport default MountainDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MountainDetails\");","map":{"version":3,"names":["React","useState","useEffect","Card","Button","Modal","classes","MountainDetails","props","addHike","setAddHike","changedDate","setChangedDate","enteredDate","setEnteredDate","allPeopleOnTheMountain","setAllPeopleOnTheMountain","goBack","onBack","addHikeHandler","noAdding","changeDateHandler","event","target","value","writeHikeHandler","date","toString","reqOptions","method","headers","body","JSON","stringify","id","localStorage","getItem","mountain","response","fetch","ok","console","log","Error","error","message","getAllHikers","json","peopleOnTheMountainLi","map","item","details","name","altitude","difference","longitude","duration","length","peoplediv","detailsbutton1","detailsbutton2","mymodal","myh1","myp","myinput","buttondiv"],"sources":["C:/mountain_friends/frontend/src/components/Home/MountainDetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport Card from \"../UI/Card/Card\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport Modal from \"../UI/Modal/Modal\";\r\nimport classes from \"./MountainDetails.module.css\";\r\n\r\nconst MountainDetails = (props) => {\r\n  const [addHike, setAddHike] = useState(false);\r\n  const [changedDate, setChangedDate] = useState(false);\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [allPeopleOnTheMountain, setAllPeopleOnTheMountain] = useState([]);\r\n  const goBack = () => {\r\n    props.onBack();\r\n  };\r\n\r\n  const addHikeHandler = () => {\r\n    setAddHike(true);\r\n  };\r\n\r\n  const noAdding = () => {\r\n    setEnteredDate(\"\");\r\n    setChangedDate(false);\r\n    setAddHike(false);\r\n  };\r\n\r\n  const changeDateHandler = (event) => {\r\n    setChangedDate(true);\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const writeHikeHandler = async () => {\r\n    const date = enteredDate.toString();\r\n    // console.log(date);\r\n    const reqOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: localStorage.getItem(\"isLoggedIn\"),\r\n        mountain: props.id,\r\n        date: date,\r\n      }),\r\n    };\r\n    try {\r\n      const response = await fetch(\"http://localhost:8080/addhike\", reqOptions);\r\n      if (!response.ok) {\r\n        console.log(response);\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n      setAddHike(false);\r\n      setChangedDate(false);\r\n      setEnteredDate(\"\");\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAllHikers = async () => {\r\n      const reqOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          id: localStorage.getItem(\"isLoggedIn\"),\r\n          mountain: props.id,\r\n        }),\r\n      };\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:8080/getallhikers\",\r\n          reqOptions\r\n        );\r\n        if (!response.ok) {\r\n          console.log(response);\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n        const body = await response.json();\r\n        console.log(body);\r\n        setAllPeopleOnTheMountain(body);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    getAllHikers();\r\n  }, [props.id]);\r\n\r\n  const peopleOnTheMountainLi = allPeopleOnTheMountain.map((item) => (\r\n    <li key={item}>{item}</li>\r\n  ));\r\n\r\n  return (\r\n    <Card className={classes.details}>\r\n      <div>\r\n        <h2>Mountain details for {props.name}</h2>\r\n        <p>Altitude: {props.altitude} m</p>\r\n        <p>Height difference: {props.difference} m</p>\r\n        <p>Longitude: {props.longitude} km</p>\r\n        <p>Duration: {props.duration} hours</p>\r\n        {allPeopleOnTheMountain.length > 0 && (\r\n          <div className={classes.peoplediv}>\r\n            <h2>All people who have been on this mountain</h2>\r\n            <ul>{peopleOnTheMountainLi}</ul>\r\n          </div>\r\n        )}\r\n        <Button className={classes.detailsbutton1} onClick={goBack}>\r\n          Back\r\n        </Button>\r\n        <Button className={classes.detailsbutton2} onClick={addHikeHandler}>\r\n          Add tour to my list\r\n        </Button>\r\n      </div>\r\n      {addHike && (\r\n        <Modal className={classes.mymodal}>\r\n          <h1 className={classes.myh1}>\r\n            Do want to add {props.name} to your hike list?\r\n          </h1>\r\n          <p className={classes.myp}>Choose a date</p>\r\n          <input\r\n            className={classes.myinput}\r\n            type=\"date\"\r\n            id=\"newDate\"\r\n            name=\"newDate\"\r\n            min=\"2020-01-01\"\r\n            value={enteredDate}\r\n            onChange={changeDateHandler}\r\n          />\r\n          <div className={classes.buttondiv}>\r\n            <Button onClick={noAdding}>Back</Button>\r\n            {changedDate && (\r\n              <Button onClick={writeHikeHandler}>Add hike</Button>\r\n            )}\r\n            {!changedDate && <Button disabled>Add hike</Button>}\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MountainDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}