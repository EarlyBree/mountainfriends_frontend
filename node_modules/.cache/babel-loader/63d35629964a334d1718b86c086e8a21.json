{"ast":null,"code":"var _jsxFileName = \"C:\\\\mountain_friends\\\\frontend\\\\src\\\\components\\\\Home\\\\AllMountainsInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport MountainCard from \"./MountainCard\";\nimport MountainDetails from \"./MountainDetails\";\nimport classes from \"./AllMountainsInfo.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllMountainsInfo = () => {\n  _s();\n\n  const [allMountains, setAllMountains] = useState([]);\n  const [mountainInfo, setMountainInfo] = useState([]);\n  useEffect(() => {\n    const fetchAllMountains = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/getallmountains\");\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        } // let body = JSON.parse(JSON.stringify(response));\n\n\n        const body = await response.json();\n        setAllMountains(body);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchAllMountains();\n  }, []);\n\n  const showDetails = async id => {\n    const reqOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: id\n      })\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:8080/getmountainbyid\", reqOptions);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      }\n\n      const body = await response.json();\n      console.log(body[0].name);\n      setMountainInfo(body);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    console.log(mountainInfo);\n  }, [mountainInfo]);\n  const allMountainCards = allMountains.map(mountain => /*#__PURE__*/_jsxDEV(MountainCard, {\n    id: mountain.id,\n    name: mountain.name,\n    altitude: mountain.altitude,\n    onShowDetails: showDetails\n  }, mountain.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.mountainsinfo,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All mountains\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), !mountainInfo.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: allMountainCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(MountainDetails, {\n      name: mountainInfo.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllMountainsInfo, \"8NNt6bswhL8CDW8GpFeI/SLpZLo=\");\n\n_c = AllMountainsInfo;\nexport default AllMountainsInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMountainsInfo\");","map":{"version":3,"names":["React","useEffect","useState","Card","MountainCard","MountainDetails","classes","AllMountainsInfo","allMountains","setAllMountains","mountainInfo","setMountainInfo","fetchAllMountains","response","fetch","ok","Error","body","json","error","console","log","message","showDetails","id","reqOptions","method","headers","JSON","stringify","name","allMountainCards","map","mountain","altitude","mountainsinfo","length"],"sources":["C:/mountain_friends/frontend/src/components/Home/AllMountainsInfo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card/Card\";\r\nimport MountainCard from \"./MountainCard\";\r\nimport MountainDetails from \"./MountainDetails\";\r\nimport classes from \"./AllMountainsInfo.module.css\";\r\n\r\nconst AllMountainsInfo = () => {\r\n  const [allMountains, setAllMountains] = useState([]);\r\n  const [mountainInfo, setMountainInfo] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAllMountains = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/getallmountains\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n        // let body = JSON.parse(JSON.stringify(response));\r\n        const body = await response.json();\r\n        setAllMountains(body);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    fetchAllMountains();\r\n  }, []);\r\n\r\n  const showDetails = async (id) => {\r\n    const reqOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: id,\r\n      }),\r\n    };\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:8080/getmountainbyid\",\r\n        reqOptions\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n      const body = await response.json();\r\n      console.log(body[0].name);\r\n      setMountainInfo(body);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(mountainInfo);\r\n  }, [mountainInfo]);\r\n\r\n  const allMountainCards = allMountains.map((mountain) => (\r\n    <MountainCard\r\n      key={mountain.id}\r\n      id={mountain.id}\r\n      name={mountain.name}\r\n      altitude={mountain.altitude}\r\n      onShowDetails={showDetails}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <Card className={classes.mountainsinfo}>\r\n      <h1>All mountains</h1>\r\n      {!mountainInfo.length > 0 && <ul>{allMountainCards}</ul>}\r\n\r\n      <MountainDetails name={mountainInfo.name} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AllMountainsInfo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}