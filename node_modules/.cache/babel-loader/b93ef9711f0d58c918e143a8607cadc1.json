{"ast":null,"code":"var _jsxFileName = \"C:\\\\mountain_friends\\\\frontend\\\\src\\\\components\\\\Home\\\\AllFriendsInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FriendCard from \"./FriendCard\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./AllFriendsInfo.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllFriendsInfo = () => {\n  _s();\n\n  const [allFriends, setAllFriends] = useState([]);\n  const [friendAdded, setFriendAdded] = useState(false);\n  useEffect(() => {\n    const fetchAllFriends = async () => {\n      const reqOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: localStorage.getItem(\"isLoggedIn\")\n        })\n      };\n\n      try {\n        const response = await fetch(\"http://localhost:8080/getallusers\", reqOptions);\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        }\n\n        const body = await response.json();\n        setAllFriends(body);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchAllFriends();\n  }, []);\n\n  const addFriend = friendsId => {\n    console.log(friendsId);\n    const reqOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: localStorage.getItem(\"isLoggedIn\"),\n        friendsId: friendsId\n      })\n    };\n\n    try {\n      const response = fetch(\"http://localhost:8080/addafriend\", reqOptions);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong\");\n      } // const body = await response.json();\n      // setAllFriends(body);\n\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const allFriendsCard = allFriends.map(friend => /*#__PURE__*/_jsxDEV(FriendCard, {\n    id: friend.id,\n    name: friend.name,\n    email: friend.email,\n    birthday: friend.birthday,\n    city: friend.city,\n    button: \"Add friend\",\n    isFriend: friend.isFriend,\n    addFriend: addFriend\n  }, friend.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.friendsinfo,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"All people\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.friendlist,\n      children: allFriendsCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AllFriendsInfo, \"XApiHxLGX1nfcaiNM75+c+51NAE=\");\n\n_c = AllFriendsInfo;\nexport default AllFriendsInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllFriendsInfo\");","map":{"version":3,"names":["React","useState","useEffect","FriendCard","Card","classes","AllFriendsInfo","allFriends","setAllFriends","friendAdded","setFriendAdded","fetchAllFriends","reqOptions","method","headers","body","JSON","stringify","id","localStorage","getItem","response","fetch","ok","Error","json","error","console","log","message","addFriend","friendsId","allFriendsCard","map","friend","name","email","birthday","city","isFriend","friendsinfo","friendlist"],"sources":["C:/mountain_friends/frontend/src/components/Home/AllFriendsInfo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport FriendCard from \"./FriendCard\";\r\nimport Card from \"../UI/Card/Card\";\r\nimport classes from \"./AllFriendsInfo.module.css\";\r\n\r\nconst AllFriendsInfo = () => {\r\n  const [allFriends, setAllFriends] = useState([]);\r\n  const [friendAdded, setFriendAdded] = useState(false);\r\n  useEffect(() => {\r\n    const fetchAllFriends = async () => {\r\n      const reqOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          id: localStorage.getItem(\"isLoggedIn\"),\r\n        }),\r\n      };\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:8080/getallusers\",\r\n          reqOptions\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n        const body = await response.json();\r\n        setAllFriends(body);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    fetchAllFriends();\r\n  }, []);\r\n\r\n  const addFriend = (friendsId) => {\r\n    console.log(friendsId);\r\n    const reqOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: localStorage.getItem(\"isLoggedIn\"),\r\n        friendsId: friendsId,\r\n      }),\r\n    };\r\n    try {\r\n      const response = fetch(\"http://localhost:8080/addafriend\", reqOptions);\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n      // const body = await response.json();\r\n      // setAllFriends(body);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const allFriendsCard = allFriends.map((friend) => (\r\n    <FriendCard\r\n      key={friend.id}\r\n      id={friend.id}\r\n      name={friend.name}\r\n      email={friend.email}\r\n      birthday={friend.birthday}\r\n      city={friend.city}\r\n      button={\"Add friend\"}\r\n      isFriend={friend.isFriend}\r\n      addFriend={addFriend}\r\n    />\r\n  ));\r\n  return (\r\n    <Card className={classes.friendsinfo}>\r\n      <h1>All people</h1>\r\n      <ul className={classes.friendlist}>{allFriendsCard}</ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AllFriendsInfo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}