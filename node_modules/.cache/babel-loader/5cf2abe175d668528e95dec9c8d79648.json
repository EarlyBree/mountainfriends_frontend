{"ast":null,"code":"var _jsxFileName = \"C:\\\\mountain_friends\\\\frontend\\\\src\\\\components\\\\Home\\\\AllMountainsInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport MountainCard from \"./MountainCard\";\nimport classes from \"./AllMountainsInfo.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AllMountainsInfo = () => {\n  _s();\n\n  const [allMountains, setAllMountains] = useState([]);\n  useEffect(() => {\n    const fetchAllMountains = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/getallmountains\");\n\n        if (!response.ok) {\n          throw new Error(\"Something went wrong\");\n        } // let body = JSON.parse(JSON.stringify(response));\n\n\n        const body = await response.json();\n        console.log(body);\n        setAllMountains(body);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchAllMountains();\n  }, []);\n  const allMountainCards = {};\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.mountainsinfo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AllMountainsInfo, \"Qv8Afk1jfaeI1gb57fLRME1QRLo=\");\n\n_c = AllMountainsInfo;\nexport default AllMountainsInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllMountainsInfo\");","map":{"version":3,"names":["React","useEffect","useState","Card","MountainCard","classes","AllMountainsInfo","allMountains","setAllMountains","fetchAllMountains","response","fetch","ok","Error","body","json","console","log","error","message","allMountainCards","mountainsinfo"],"sources":["C:/mountain_friends/frontend/src/components/Home/AllMountainsInfo.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport Card from \"../UI/Card/Card\";\r\nimport MountainCard from \"./MountainCard\";\r\nimport classes from \"./AllMountainsInfo.module.css\";\r\n\r\nconst AllMountainsInfo = () => {\r\n  const [allMountains, setAllMountains] = useState([]);\r\n  useEffect(() => {\r\n    const fetchAllMountains = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8080/getallmountains\");\r\n        if (!response.ok) {\r\n          throw new Error(\"Something went wrong\");\r\n        }\r\n        // let body = JSON.parse(JSON.stringify(response));\r\n        const body = await response.json();\r\n        console.log(body);\r\n        setAllMountains(body);\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    };\r\n    fetchAllMountains();\r\n  }, []);\r\n\r\n  const allMountainCards = {};\r\n\r\n  return <Card className={classes.mountainsinfo}></Card>;\r\n};\r\n\r\nexport default AllMountainsInfo;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,+BAApB;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;EAAA;;EAC7B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;EACAD,SAAS,CAAC,MAAM;IACd,MAAMQ,iBAAiB,GAAG,YAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAA5B;;QACA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;UAChB,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;QACD,CAJC,CAKF;;;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;QACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;QACAN,eAAe,CAACM,IAAD,CAAf;MACD,CATD,CASE,OAAOI,KAAP,EAAc;QACdF,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB;MACD;IACF,CAbD;;IAcAV,iBAAiB;EAClB,CAhBQ,EAgBN,EAhBM,CAAT;EAkBA,MAAMW,gBAAgB,GAAG,EAAzB;EAEA,oBAAO,QAAC,IAAD;IAAM,SAAS,EAAEf,OAAO,CAACgB;EAAzB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAvBD;;GAAMf,gB;;KAAAA,gB;AAyBN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}